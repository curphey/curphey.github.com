<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Mark Curphey]]></title>
  <link href="http://curphey.github.com/atom.xml" rel="self"/>
  <link href="http://curphey.github.com/"/>
  <updated>2013-02-04T14:42:10-08:00</updated>
  <id>http://curphey.github.com/</id>
  <author>
    <name><![CDATA[Mark Curphey]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[App Sec Programs Are Like Multi-Axis Gyroscopes]]></title>
    <link href="http://curphey.github.com/blog/2012/11/29/appsec-programs-are-like-multi-axis-gyroscopes/"/>
    <updated>2012-11-29T11:45:00-08:00</updated>
    <id>http://curphey.github.com/blog/2012/11/29/appsec-programs-are-like-multi-axis-gyroscopes</id>
    <content type="html"><![CDATA[<p>The Practical Software Security book has five main sections:</p>

<p>Introduction - The Curious Case of Software Security
Software Security Fundamentals
Development Technologies
Software Security for Teams
Security Engineering Patterns (will be developed online in 2013 at Seconauts)</p>

<p>I finally submitting the intro section and putting the final touches to the ‘fundamentals’ section so that the contributing authors (an awesome bunch) can finally get going writing their Development Technologies sections. I have found it useful over the years to write pseudo-text ahead of time and come back to re-factor massively so earlier this week and very late one evening I did exactly that for the ‘Software Security for Teams’ section. There are lots of different ways to slice and dice a software security program but for me (keeping it simple) it boils down to four core areas of practices for each application:</p>

<p>Design &amp; Architecture
Code &amp; Construction
Testing &amp; QA
Operations &amp; Monitoring</p>

<p>Companies typically have many applications (some quite literally thousands) and each application in the portfolio will (or should) have some level activity in each practice area whether it’s a new application or legacy. This is the reason why the application portfolio management (actively understanding what is happening in your companies application portfolio) is such a critical and under-rated activity. That knowledge allows your team to work on the right things. In most large companies application portfolio management is far from a trivial task and in fact a full-time job for many people.</p>

<p>Now consider that for each practice area (see above) there is actually a set of sub-practices. Take Testing &amp; QA for example: (static) code reviews, (dynamic) reviews, penetration testing, build verification, regression etc. In Design &amp; Architecture: requirements, engineering patterns, compliance, technology alignment, threat modeling / architecture analysis and the list goes on. I go into detail about each thing in the book. Supporting each of these practices and sub-practices are a set of company specific knowledge in the form of guidance or prescriptions or even recipes (code) that need to be applied.</p>

<p>Now take it up another notch and remember that these practices run in parallel in an Agile world. Then take it up a notch again and remember there are usually many scrum teams working on every application so it’s actually many sets of practices per application that needs to be managed. That’s many practices that need to be managed, across many teams across many applications, all-running in parallel. When you think about it, it really isn’t surprising that so many data breaches occur. The sheer lack of visibility most people responsible for software security have into what development teams are doing is poor to say the least and the ability to focus their attention on the things that really matter incredibly difficult.</p>

<p>For a long time (many years) I have been looking for a metaphor to describe this complexity application security programs have to manage but nothing ever seemed to fit but just as I was shutting down my MacBook on while writing the book this week it came to me. Eureka!</p>

<p>An application security program is like a multi-axis gyroscope. Gyroscopes look like magic when they are spinning. They spin furiously while standing perfectly still, you can even nudge them and they return to equilibrium and you can feel the force they generate to maintain equilibrium. But when you get the balance of a gyroscope wrong it will shoot across the table uncontrollably.</p>

<p>Application security programs are like gyroscopes. You have to balance many practices across many teams across many applications. When you get it right it magical but when you get the balance wrong things go very wring very fast.</p>

<p>Look at this video and marvel!</p>

<p>[% video http://youtu.be/cquvA_IpEsA 320 320 %]</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Outsourcing Doesn't Mean The Security problem Goes Away]]></title>
    <link href="http://curphey.github.com/blog/2012/11/27/outsourcing-doesnt-mean-the-security-problem-goes-away/"/>
    <updated>2012-11-27T11:43:00-08:00</updated>
    <id>http://curphey.github.com/blog/2012/11/27/outsourcing-doesnt-mean-the-security-problem-goes-away</id>
    <content type="html"><![CDATA[<p>Over the last decade or so I have dealt with a lot of outsourcing situations. I have run large outsourced teams (over 120 off-shore developers in India and China at one point) and been responsible for reviewing the security of the work products of many others both as an employee and as a consultant. I am yet to experience a single firm or team that produced reasonable quality ‘secure’ code without significant active ongoing involvement from the purchaser. Despite legal pre-cautions (and best intentions) the outsourcing model is an economic model and it is good advice to never forget that. This is not a cultural or regional issue (although they all exist as well). Some of the best developers I have worked with were born in India, Russia and China. Outsourcing relies on large pools of skilled workers at a significantly lower cost per head than where the purchaser is located. Large pools of skilled workers are hard to find and keep in any location. The magic satellite office of transient workers is a pipe-dream.
Software development is also a social process where people must communicate effectively. A reference on the Wikipedia article for body language says:</p>

<p>“James Borg states that human communication consists of 93 percent body language and paralinguistic cues, while only 7% of communication consists of words themselves.”</p>

<p>Relying on phone calls to communicate between the designer and the developer clearly leaves outsourcing teams at a significant unfair disadvantage. If the statistics above hold true then the most effective your communication can ever be is 7% as effective as a local team, and that is in a discipline where communication is critical to your success!</p>

<p>When you layer in that communicating security requirements is even harder, it isn’t any wonder that I am yet to experience a single firm or team that produced reasonable quality ‘secure’ code without significant active ongoing involvement from the purchaser.</p>

<p>The only way I have found to improve the security effectiveness of outsourced teams is active ongoing involvement in the following three areas:</p>

<p>On-Shore Rotation - Pull the off-shore team on-shore for a period of time. This is especially important at the beginning of a project to learn how the team works and to build personal relationships. I also found that cycling the team back on-shore periodically is essential.</p>

<p>Security Knowledge - Treat the off-shore team the same way you do as the on-shore team and provide security training and knowledge sharing.</p>

<p>Off-Shore Visits - Out-of-sight should not be out-of-mind. There is tremendous value in site visits from various members of the team. This also builds empathy with the on-shore team of the challenges the off-shore teams faces. Nothing beats an American getting up in the middle of the night jetlagged to do a daily stand-up!</p>

<p>The three areas all negate some of the economic model which probably explains why few people do it but simply put Outsourcing Doesn’t Mean the Security Problem Goes Away.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Scottish Verdicts and Security]]></title>
    <link href="http://curphey.github.com/blog/2012/11/27/scottish-verdicts-and-security/"/>
    <updated>2012-11-27T11:41:00-08:00</updated>
    <id>http://curphey.github.com/blog/2012/11/27/scottish-verdicts-and-security</id>
    <content type="html"><![CDATA[<p>Every few months I watch Greg Wilsons excellent speech from CuSec,  What We Actually Know About Software Development, and Why We Believe It’s True.</p>

<p>In the opening remarks Greg talks about how the Scottish legal system can return three verdicts.</p>

<p>Not-Guilty
Guilty
Not Proven
The ‘Not Proven’ verdict is an acquittal used when the judge or jury does not have enough evidence to convict but is not sufficiently convinced of the defendant’s innocence to bring in a “not guilty” verdict. Essentially it says this is what we think but we can’t prove it.</p>

<p>I confess to being very guilty of quoting Scottish verdicts in the past.</p>

<p>Every time I watch the video I can’t help but reflect how the security industry uses Scottish verdicts to sell security to developers. I am sure we have all seen the statistic that it costs 30 times more to fix a security bug in production than it does in development. Fast forward to minute 18:30 and smile.</p>

<p><video width='' height='' preload='none' controls poster=''><source src='http://vimeo.com/9270320' type='video/mp4; codecs="avc1.42E01E, mp4a.40.2"'/></video></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Great Freelancing]]></title>
    <link href="http://curphey.github.com/blog/2012/11/14/great-freelancing-tools/"/>
    <updated>2012-11-14T11:35:00-08:00</updated>
    <id>http://curphey.github.com/blog/2012/11/14/great-freelancing-tools</id>
    <content type="html"><![CDATA[<p>I think I have a pretty sweet setup that lets me spend the maximum amount of time working on projects and the minimal amount of time dealing with over-head. Time is limited so I like using it wisely. These are the business tools I am currently using.</p>

<p>QuickBooks Online - My wife is a small business book keeper so I had some inside knowledge. I had two fixed requirements, the first that my books were accessible from a browser and the second that payroll was done directly from the books. There are many options like Wave Accounting and FreshBooks, QuickBooks generally just works and payroll integration is easy. We use Compupay for payroll which is cheaper than QuickBooks. While I really like Harvest App and RoninApp (and particularly the iPhone and desktop time app for Harvest) QuickBooks has time tracking free if you take the $39.95 a month subscription. Once a week my wife can pull in hours I need to bill, sync the expenses (see below) and electronically invoice. Bam!
ShoeBoxed - Colleagues now how much I hate doing expenses. Almost everyone I know finds submitting expenses frustrating and time consuming. I used to spend two hours for every week I was on the road scanning receipts and filling out online forms. Meet ShoeBoxed. As I spend something I photograph the receipt from within the app. It get’s tagged and uploaded and is then available to be pulled onto QuickBooks. That’s it. Oh but wait it gets even better. The good folks at ShoeBox send you a blue envelope like the NetFlix DVD envelopes. If you don’t want to scan your receipts you just chuck them in the pre-paid envelope and mail it. Within a few days the scan them and add them to your account and return the paperwork for your records. I am yet to go through a complete cycle with this but so far it seems to work like a charm and save me 4 hours a month and a ton of frustration. It costs $49.95 a month but that is great value for my time. That’s 4 hours I get to spend with the family (or bill to clients).</p>

<p>TripIt - is a life-saver if you a travel a lot. You can give TripIt access to your gmail via OAuth to scan your mail and create trips based on travel confirmations. Being paranoid I just forward conformations to plans@tripit.com and it creates then for me. TripIt sends me alerts of gate changes usually before the screens in the airport get updated. When you land you get an alert that tells you where your connection is, how much time you have and even which baggage claim you need to go to if you checked in bags. I upgraded to the Pro version but frankly get nothing more than I used in the free version.</p>

<p>TomTom on iPhone - I used to carry a portable GPS but TomTom on the iPhone is always with me. When combined with a portable car windows mount and car charger it gets the navigation job done. I have struggled through with Google Maps and Hertz’s “Forever Lost” and while TomTom has its quirks, it just works 99% of the time.</p>

<p>SpiderOak - Fully encrypted backup where the provider never sees the data in the clear. You can sync across boxes.</p>

<p>Remember The Milk - I have used this app for years (web and iPhone client). It’s simple and effective. I have lists set up for Personal, Curphey LLC, Client-X, Seconauts, SourceClear, Book and Blog and just constantly re-prioritize. At the start of each day I look at what I didn’t get done yesterday and re-prioritize.</p>

<p>SalesForce - I have just set this up but people I trust swear by it. Don’t get fooled by monthly pricing, you have to pay for an annual license which is painful for a so-called “on demand cloud service” (over $700 for a Pro License) but for managing customer relationships and a sales pipeline it’s tough to beat. I will have the corporate web site post inquiries directly into SalesForce via the API and use it to drive mail marketing campaigns.</p>

<p>If you have great tools that save you time I would love to hear about them!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[SourceClear - My New Company]]></title>
    <link href="http://curphey.github.com/blog/2012/11/13/sourceclear-my-new-company/"/>
    <updated>2012-11-13T11:32:00-08:00</updated>
    <id>http://curphey.github.com/blog/2012/11/13/sourceclear-my-new-company</id>
    <content type="html"><![CDATA[<p>Last Friday was my last day at Foundstone and my last day as an employee. Yesterday was my first day as the founder of a startup called SourceClear. Screw it, I just did it!</p>

<p>I have rented office space at Indie Ballard, got an accountant, a lawyer and am actively talking to potential investors while I start initial work on a prototype. I think that the biggest challenge for software security today is connecting People, Process and Technology and I plan to make an impact on that problem. It’s an issue worth fighting for.</p>

<p>I plan to build the sort of company that I have always wanted to work for. I have been inspired by many startups including GitHub, Etsy, 37 Signals, Fog Creek as well as bigger companies like Virgin, Google and SalesForce. I want to make SourceClear the very best place for great developers and great software security people to do their very best work and make a dent in the world. If you are a talented Java developer (Spring), love software security, are a US citizen (or hold a valid US work visa) and want to be part of small early stage software startup doing something very unique then I would love to talk to you. There are pre-funded opportunities now to work with me on a prototype (pre-funding stock, shape our culture and future) and there will be post-funded opportunities after we raise money (sometime in 2013). We have a pretty damn amazing advisory board being formed.</p>

<p>We may well launch in the new year with training &amp; services that will enable us to generate revenue and better understand specific customer problems. This model has worked well for many startups (Foundstone included) but has advantages and disadvantages. This blog will start to have a lot of posts about the nuts and bolts of startup life. One such topic is that I have taken a contract to boot-strap some of this early work. I happened to be working on an awesome project with an awesome client so continuing as a contractor was a no brainer.</p>

<p>This move also allows me to invest in supporting the launch of Seconauts both financially and with my time. We are setting up a 501(3)C and will go live in January. We now have several sponsorship pledges from some services and product firms for Seconauts (more always welcome, please contact me if interested) and will be ready to start professional coding on the first project, an engineering patterns and re-usable code repository in the new year. Everything will be 100% free and open source. We plan to also release a free online web app scanner service based on Arachni sometime next year.</p>

<p>If I can pull off what I want to pull off with SourceClear then it will disrupt the current status quo and make a significant positive impact on the state of software security. There is a lot of hard work ahead.</p>

<p>Blue skies!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ready to Pick a Fight]]></title>
    <link href="http://curphey.github.com/blog/2012/11/08/ready-to-pick-a-fight/"/>
    <updated>2012-11-08T11:27:00-08:00</updated>
    <id>http://curphey.github.com/blog/2012/11/08/ready-to-pick-a-fight</id>
    <content type="html"><![CDATA[<p>I think I am ready to pick a fight. It’s not a new fight (at least not for me) and it’s not a fight with a person or a company but it’s a fight with the status-quo.</p>

<p>In the grand scheme of things I don’t think we need more or better or different testing tools. I don’t even think we need more or better or different security testers. The people and tools the industry has are already pretty damn good. Conferences are heavy with great talks about how to find issues, how to expose edge cases and hot to automate testing. Sure they could always be better (*) but if you look at the real state of most software in most development teams, better assessment tooling to find more issues is just ‘polishing a turd’ (excuse the British phrase).</p>

<p>In the same way gym memberships don’t make you fit (it’s going to the gym of course that does) unless we improve the way we design, implement and fix broken software we will never get off the current hamster wheel of death.</p>

<p><video width='' height='' preload='none' controls poster=''><source src='http://youtu.be/oyQP-DCTjzA' type='video/mp4; codecs="avc1.42E01E, mp4a.40.2"'/></video></p>

<p>The pragmatic issues that I have seen time and time again over the last year since I returned to security consulting are fundamental, repetitive and pervasive. One developer I spoke to said “it must be like shooting fish in a barrel?”.</p>

<p>I think the priority for software security should be orchestrating People and Process and Tools (not People or Process or Tools) because without all three working together you don’t have a whole solution. I re-read my Cogs and Levers essay today and I still think it’s spot on.</p>

<p>It’s time for me to pick a fight with the status quo and make a difference.</p>

<ul>
<li>SMALL PRINT TO AVOID THE FLAME MAIL: I am not saying that better assessment tools won’t make things better. Of course they will. I am not saying we shouldn’t continue to improve testing. Of course we should. I am just saying that more and more and more and more testing with better and better and better tools is not going to move the needle as much as orchestrating people and process and tools together. When you get the people and process right then the real effectiveness of the tools will be realized.</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Follow Up on Investing in Software Security Talent]]></title>
    <link href="http://curphey.github.com/blog/2012/11/08/follow-up-on-investing-in-software-security-talent/"/>
    <updated>2012-11-08T11:20:00-08:00</updated>
    <id>http://curphey.github.com/blog/2012/11/08/follow-up-on-investing-in-software-security-talent</id>
    <content type="html"><![CDATA[<p>A few weeks ago I posted Investing in Developing Software Security Talent. It got a good reaction and stimulated some good discussion. I have now spoken at length to a quite a few people including folks that head up recruitment at BIG Internet companies and a number of security services and product firms. There was an over-whelming sense of “very interesting”, “no brainer”, “you go boy”, “someone needs to do it” and just an overall warm positive response. Thanks to those who spent time on the phone or in person listening to me and sharing their thoughts. I even had verbal offers of over $40K to support such a program from people I spoke to so it clearly wasn’t people just being nice. There were of course the usual array of negative people; one guy even wrote a long blog post criticizing the idea clearly without having read it, but it’s the Internet after all. No time for negativity, I am on a happiness drive!</p>

<p>One of the big things I learned was that many people who have run intern programs confided in me that the reason programs aren’t as effective as they could be is that whilst stellar individuals are usually willing to commit their time and resources, without a central person driving the program at all times they usually flounder. I was independently advised that you need a full-time person for roughly 12 interns, or put another way 4 hours a week per Intern. Sadly, despite the positive response and seemingly valuable idea I am disappointed that after exploring it further I learned about the sheer amount of effort it would take to put such a program together and operate it properly. Sadly I just don’t have that time.</p>

<p>I really believe that this type of program needs to happen and I hope that someone with the time or motivation makes it happen. If you do, please contact me. I will happily financially contribute in some way.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[My Happiness Project]]></title>
    <link href="http://curphey.github.com/blog/2012/11/02/my-happiness-project/"/>
    <updated>2012-11-02T11:18:00-07:00</updated>
    <id>http://curphey.github.com/blog/2012/11/02/my-happiness-project</id>
    <content type="html"><![CDATA[<p>I have been an arm-chair phyciatrist for many years reading books like Blink, Drive, The Dip and notably The Art of Happiness (a book that had a profound impact on me). I just read How to Be Happy, Dammit: A Cynic’s Guide to Spiritual Happiness. I say read but it was more a case of flicking through the slides as the book is an ordered collection of small pieces of advice set against relevant images.</p>

<p>Those that know me well often call me a ‘miserable git’ and while I usually dismiss it as ‘hogwash’ it’s probably true. I think I have very high standards and ‘don’t suffer fools gladly’. I know I have a short fuse and an even shorter attention span. I thrive under pressure so like to surround myself with high pressure situations. When I believe in something or am interested enough in something I don’t let go or take no for an answer and have to know every detail and if I can’t make something happen one way I’ll just try another way until I do. When these things are combined it’s easy to see why people confuse what I think as just being ‘driven’ with being miserable. I am hopeully never rude but I rarely go out of my way to consciously be nice.</p>

<p>I have tried several projects in the past from running (which resulted in a life-long passion) to being a vegan (which resulted in me now living on a predominantly plant-based diet) and of course many things that didn’t work. I have decided I am going to try a new project: actively working to be happy. It’s not that I am un-happy. I have a great wife, great kids, I am financially well off, I live in a great place and have good friends. I am healthy and generally enjoy life. Sure there are ups and there are downs but in general life is good. What I don’t have is that outward happiness that some people possess that seems to also translate into a deeper inner happiness. I always tell the kids that “behavior breeds behavior” and have always thought that you are part of the environment you create yet at the same time I am a ‘glass half-empty person’ and admit I can be pretty darn negative at times. But no more, life is not about the bad things but about good things.</p>

<p>If anything Hurricane Sandy teaches you anything it’s that we all have a limited time on this planet and you never know what tomorrow may bring.The tragedy and devastation on the East Coast (and the seemingly constant news of human suffering around the world) made me reflect on what I should be truly grateful for and also on how my life could be even better; how I could be happier.</p>

<p>I have started a bunch of experiments, some small and subtle, some big and bold. I will make notes and post them here as appropriate in the coming weeks and months. I don’t plan to lose being ‘driven’ or walking away from tough situations or pushing on important things but I think you can be ‘driven’ and happy.</p>

<p>If you reap what you sow then I am off to sow some happy seeds!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Choose Your Clients Wisely]]></title>
    <link href="http://curphey.github.com/blog/2012/11/02/choose-your-clients-wisely/"/>
    <updated>2012-11-02T11:13:00-07:00</updated>
    <id>http://curphey.github.com/blog/2012/11/02/choose-your-clients-wisely</id>
    <content type="html"><![CDATA[<p>Anyone that has been consulting for a while has experienced the ‘tough client’ (aka ‘the bad client’). The company that doesn’t really want your advice but really wants another pair of hands to do what they don’t want to do themselves. The company that wants you to do the tasks that are beneath them or boring or meaningless. The company that doesn’t really want you to do the job they hired you to do but really wants you to deliver a set of information pushing forward thier pre-determined agenda or results. The person that treats you like their pet. The company that pays you for your brain but treats you like a manual laborer. I just left Chicago O’Hare and couldn&#8217;t help but over-hear a conversation between two colleagues from a big consulting firm (company name embossed on laptop bags). Relaxing with their guard down at the end of the week one was bitching about the project they were on. From what I could tell they were BI developers. One turned to the other and said, “I hate customers like XXXX and I honestly think YYYY [person] is a jerk dude.” The second quickly replied “I disagree, I prefer clients like this, if you lose them it really doesn’t matter.” The idiocy of this conversation is surely not lost on many.</p>

<p>Working like this is nothing more than short-sighted and foolish for both parties. Tough clients get frustrated when consultants don’t jump on command, don’t follow orders, don’t produce lapdog results or deliver crony messages acting as a supposed independent source. Consultants gets frustrated when they can’t exercise their brains, aren’t valued, aren’t challenged and aren’t respected. If not frustrated then they simply check out like the guys at the airport. When this happens no one wins.</p>

<p>I decided a while back that I am not working with ‘tough’ clients. Life is too short. I work for fun, intellectual stimulation and yes money. I made my decision when I realized that most consulting projects are based on only two things: cost and skill. If the client and consultant are not well aligned in their working culture (principles, goals, working practices, personalities etc.) then the project is unlikely to be anything more than a forgettable dull transaction. I think like is too short for projects like that.</p>

<p>Choose Your Clients Wisely!</p>

<p>The guys from Less Everything offer great advice about how to pick your clients if you are a web developer in their ebook How LessEverything makes $1mil annually from client services.</p>

<p>For the record and hopefully without sounding “smarmy” I have just started a long-term project with an awesome client. Great company, great personal contact, humble, super-smart company team and very meaningful work to boot. I am sure we will face hiccups along the way but when you get a partnership like this it is hard to not deliver great results and everyone is a winner baby!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Smart Devices Require Smart Content]]></title>
    <link href="http://curphey.github.com/blog/2012/10/27/smart-devices-require-smart-content/"/>
    <updated>2012-10-27T17:41:00-07:00</updated>
    <id>http://curphey.github.com/blog/2012/10/27/smart-devices-require-smart-content</id>
    <content type="html"><![CDATA[<p>If we are to move to a world where we can access our digital content anywhere (and in the process digital content providers make money by displaying their digital content anywhere) then content providers need to accept that the traditional TV, computer and mobile devices have merged. A TV is now nothing more or nothing less than a computer display.</p>

<p>Last week while staying with a friend he suggested we watch Startup Junkies on his obscenely large Samsung Smart TV. After adding my Hulu account to his TV we discovered that I needed a Hulu Plus account to activate the device. No worries, I often want to watch Hulu on the iPad in bed which also requires a Hulu Plus account so I signed up. Activation was simple and fast and despite what seemed like five minutes of fumbling with a TV remote to type in the word “Startup Junkies” everything was looking good. Then the bomb went off.</p>

<p>This program is not available on this device</p>

<p>WTF! It turns out that “due to licensing restrictions” Hulu is only able to stream that program via a web browser. The idiocy is surely not lost on anyone. We could plug in an HDMI cable and watch it for free but that’s clearly not the point.</p>

<p>If we are to move to a world where we can access our digital content anywhere (and in the process digital content providers make money by displaying their digital content anywhere) then content providers need to accept that the traditional TV, computer and mobile devices have merged. A TV is now nothing more or nothing less than a computer display. There is a reason my TV setup is a Mac Mini connected to a Sony TV. It’s far smarter that any SmartTV on sale. It streams BBC via the iPlayer, Hulu and EyeTV for all US cable stations.</p>

<p>The TV needs serious technology disruption and I hope Apple will take on the challenge. The current model is just pants.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Who Pays That Person?]]></title>
    <link href="http://curphey.github.com/blog/2012/10/25/security-evangelists/"/>
    <updated>2012-10-25T23:13:00-07:00</updated>
    <id>http://curphey.github.com/blog/2012/10/25/security-evangelists</id>
    <content type="html"><![CDATA[<p>The security industry seems to be brimming with security evangelists. These are not to be confused with a <a href="http://en.wikipedia.org/wiki/Televangelist">Televangelist</a>: or should they? Every time I cross-paths with an evangelist of any kind I ask myself a simple question: who pays them?</p>

<blockquote><p>It is difficult to get a man to understand something when his job depends on not understanding it.</p><footer><strong>[Upton Sinclair</strong> <cite>US Author 1878 - 1968] [lhttp://www.quotationspage.com/quote/34069.html] [the Quotations Page]</cite></footer></blockquote>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Quick Recovery When Your Mac Won't Boot - Disk Full]]></title>
    <link href="http://curphey.github.com/blog/2012/10/24/mac-wont-boot-full-disk/"/>
    <updated>2012-10-24T10:46:00-07:00</updated>
    <id>http://curphey.github.com/blog/2012/10/24/mac-wont-boot-full-disk</id>
    <content type="html"><![CDATA[<p>I am a lazy sys-admin. When I was a Windows user I used to have to re-build my desktop so often than cruft got cleared out naturally but OSX is so stable that I have to remember to manually spring  clean the &#8216;Downloads&#8217; folder (cough, cough clear out the bit-torrents). This morning I rebooted for the first time in ages and my MacBook Pro failed to start. I booted into recovery mode and the disk utility showed me I only had 10Mb spare. Yikes! As a Apple &#8216;fan boi&#8217; my lizard brain tried to convince me that this was a good time to go pick up one of those nice new Retina MacBook Pros <a href="http://www.cultofmac.com/197414/everything-apple-announced-at-todays-ipad-mini-event-mega-roundup/">released yesterday</a> but there is a quick way to get up and running fast. Google wasn&#8217;t helpful in  returning a single result so here it is in 5 simple steps: <!--more --></p>

<ol>
<li>Check the Issue</li>
<li>Boot in Single User Mode</li>
<li>Mount Drive in RW</li>
<li>Delete Cruft</li>
<li>Sit Back and Feel Smug</li>
</ol>


<p><strong>Check the issue</strong> </br>
In order to check that the issue is indeed &#8220;full disk&#8221; boot into recovery mode and run the Disk Utility. To do this hold down Command + R on the power up sequence. Select the disk utility. In the bottom panel of the application first check the disk space. Mine was 18 Mb this morning (164Gb after cleaning out my cruft). Next run Verify Disk and note any issues.</p>

<p><strong>Boot into Single User Mode</strong></br>
To do this hold down Command + S on the power up sequence. You will get the standard graphical login screen. Don&#8217;t get confused and think it&#8217;s not working like I first did expecting a terminal login. Login with your root account. After a successful login you will be presented with a terminal prompt. At this point you can navigate around the file system but the drive is only mounted in a read-only mode and so you can not delete files.</p>

<p><strong>Mount Drive in RW</strong></br>
To do this you will need to run &#8220;sudo /sbin/mount -uw /&#8221; from the command line. At this point you will now have a shell with the ability to delete files.</p>

<p><strong>Delete the Cruft</strong></br>
rm -f <filename>. Navigate to your &#8220;Downlaods&#8221; folder and rm -f <em>.mp4, rm -f </em>.avi and rm -f *.dmg are probably your new best friends..</p>

<p><strong>Sit Back and Feel Smug</strong></br>
After cleaning out your cruft, type exit, grab a coffee and you will be back on your way to morning smugness!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[You Get One Shot at Disruption]]></title>
    <link href="http://curphey.github.com/blog/2012/10/22/you-get-one-shot-at-disruption/"/>
    <updated>2012-10-22T10:05:00-07:00</updated>
    <id>http://curphey.github.com/blog/2012/10/22/you-get-one-shot-at-disruption</id>
    <content type="html"><![CDATA[<p>In a video last week on the <a href="http://www.goodlifeproject.com/seth-godin/">Good Life Project</a>, <a href="http://sethgodin.typepad.com">Seth Godin</a> spoke about why he liked projects. Projects have definite lifetimes, you can jump in, experiment, learn and then right jump out again when it suits you. I also like projects for the same reasons as Seth but during the interview he said something else profoundly interesting that has had me gripped all weekend. When talking about technology disruption he said (and I paraphrase) &#8216;37 Signals can no longer be disruptive because they now have a large following and lots of customers. With that mass of followers and customers comes baggage.&#8217;</p>

<!--more-->


<p>The mass has a gravitational force pulling everyone towards the mean viewpoint. The mass has a tendency to settle on an equilibrium that represents the majority. The mass is personally invested in things staying the same. The mass doesn&#8217;t take risks. The mass works hard to maintain a status quo.</p>

<p>When you think something needs disrupting you have two paths you can follow. Try to convince the mass to change or do it anyway and hope they will come around to your vision when they see a different way.</p>

<p>If you try to convince the mass you usually have resources at your disposal but have baggage.</p>

<p>If you try to do it alone you usually have no resources at your disposal but have no baggage.</p>

<p>Technology disruptions like GitHub and Twitter and Ruby on Rails show time and time again that no resources and no baggage is usually a better option than resources that come with baggage.</p>

<p><a href="https://twitter.com/DinisCruz">Dinis Cruz</a> and <a href="https://twitter.coßm/johnwilander">Jon Willander</a>, I enjoy and respect your opinions immensely and really appreciate your offer to ask OWASP for sponsorship for my mentoring idea but as Dinis inadvertently pointed out, if I am to be disruptive I should work hard to avoid<a href="https://twitter.com/DinisCruz/status/260360740299501568"> picking up baggage.</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Investing in developing software security talent]]></title>
    <link href="http://curphey.github.com/blog/2012/10/19/investing-in-software-security-talent/"/>
    <updated>2012-10-19T09:18:00-07:00</updated>
    <id>http://curphey.github.com/blog/2012/10/19/investing-in-software-security-talent</id>
    <content type="html"><![CDATA[<p>Every single person I speak to in the software security industry agrees on one thing. There is a talent war. Put another way the demand for good software security people far outstrips the supply,  or yet another way there aren&#8217;t enough people to secure the software that needs to be secured for the digital economy to continue to growing at the current rate. I could go on but you get the point. This is of course not a security industry issue but a general software engineering issue, amplified in niche areas and the dial turned right up to eleven for &#8216;red hot&#8217; niches like security. Most companies approach the issue by making their company a more attractive place to work. Bigger salaries, better perks and a better work environment. If you judged the state of the economy by the amount of recruiter calls you would think we are in boom times. <!--more--></p>

<p>A few days ago I watched the Presidential debate. Inspired by Barack Obamas speech about investing in education to create a workforce with the skills that are in demand I started thinking about ways the security industry could invest to create the talent that is clearly in such high demand. I was thrown out of high-school at 17 (sixth form college in the UK) for being a generally naughty boy but after working it out of my system (yes &#8220;my&#8221; system not &#8220;the&#8221; system) I returned to formal education in my mid-twenties ending up with a Bachelors degree in engineering and a Masters Degree in Information Security where I specialized in cryptography at the Mathematics department of a top British University; Royal Holloway and Bedford New College, University of London. Despite being very proud of my academic achievement and appreciative of the doors that it undoubtedly opened, I can&#8217;t help also acknowledge that relatively little of what I learned at college has been used in my career. I wouldn&#8217;t change a thing (my &#8216;no regrets&#8217; rule of life) but I often wonder how life might have been different if I had found a mentor in the security industry or had found an apprenticeship instead. I love the idea of mentors and apprenticeships and clearly others do as well. Last year <a href="http://www.livingsocial.com">Living Social</a> invested in growing talent this way by creating the <a href="http://hungryacademy.com/">Hungry Academy</a>.</p>

<p><span class='pullquote-right' data-pullquote='I have an idea. I think a software security mentor and internship program done right would have a meaningful impact on the industry'>I have an idea. I think a software security mentor and internship program done right would have a meaningful impact on the industry and I would invest time and money in making it happen as a core Seconauts project starting in the new year. I have spoken to a few people about this offline but before I start calling around and actually asking people if they will commit money and time I wanted to get some broader feedback as to whether companies would be willing to sponsor it and if mentors would be willing to invest their time in mentoring candidates.</span></p>

<p><strong>How would it work?</strong></br>
<strong>What&#8217;s in it for sponsors?</strong></br>
<strong>What&#8217;s in it for candidates?</strong></br>
<strong>What&#8217;s in it for mentors?</strong></br></p>

<p><strong>How would it work?</strong>
I don&#8217;t have a detailed plan (yet). This idea has been conceived over the last few days but I think it might work something like this.</p>

<p>Companies sponsor the Seconauts non-profit 501(3)c being setup for about $10,00 USD for each year they wish to support the program. There would be two, six month internship periods each year. Each Intern gets assigned (or chooses) four mentors. The primary mentor would be their &#8216;go-to&#8217; person. I really don&#8217;t like the term life coach but it maybe appropriate here. They would focus on the career, business and industry skills and provide continuity across the program. The primary mentor would also provide a physical workspace for the Intern at their company and the Intern would be expected to be physically present Monday-Friday. This will likely mean relocating for the period of the Internship, a small but important commitment for serious candidates. There is no substitute for face-to-face time and ad-hoc meetings. The primary mentor would commit to at least two hours of one-on-one coaching every week, probably two breakfasts or evening meetings. Each Intern would also be assigned three other mentors that focus on specific areas: one for coding, one for security testing and one for security architecture / technology. The coding mentor would help them develop great coding skills, the testing mentor great code review and hacking skills and the architecture coach work through technical specifics like cryptography or SAML. Each secondary mentor would meet via a Google Hangout with the Intern for one hour a week and provide additional support as needed. For one week during the six month internship period the Intern would then also spend one full week physically with each secondary mentor at their work location. Candidates would almost definanely need to be located in the States and be legal US citizens (unless we could set this up globally of course).</p>

<p><span class='pullquote-right' data-pullquote='Living expenses, great equipment, great mentors and the ability to work on a reference able open source code base should be enough to attract the very best, brightest and most motivated talent out there.'>Using 100% of the sponsorship money for the proogram each Intern would get paid a living allowance of say $2,000 USD a month, healthcare and get a travel allowance for expenses while on the road at the secondary mentors locations. I estimate that it would cost $4K a month per Intern and so around 10 sponsors at $10,000 each would turn out 4 Interns a year. Each Intern would get all the equipment and tools they need to be successful including a brand new MacBook to keep if they successfully graduate and fully expensed accounts on GitHub, AWS etc. for the period of the program. Each Intern would be expected to work on projects as part of a scrum team building 100% open source software projects at Seconauts. That&#8217;s right the underlying program would be shipping security related software that will be open source. There is no place like production. We would set meaningful and challenging tasks that advance the community and push the interns to learn and explore. People would work from an established backlog and would be free to hack on their own projects at weekends as well. Living expenses, great equipment, great mentors and the ability to work on a reference able open source code base should be enough to attract the very best, brightest and most motivated talent out there. </span></p>

<p>All Interns accepted into the program would be required to sign-up to work for one of the sponsors for 18 months after the program is completed. All sponsors (but only sponsors) would be able to make offers to candidates and they would choose the most suitable offer. This provides the incentive for sponsors to fund the program in the first place. $10,000 USD is generally less than the fees companies pay recruiters! At the end of the six months Interns would have learned how to ship secure code, review and fix broken code, design secure software with their understanding of core technologies like cryptography as well as a solid understanding and experience of the industry. Another way to read that is that they would be highly skilled and highly valuable (and of course in high demand).</p>

<p>At the end of the Internship, sponsors would be able to offer the Interns jobs.</p>

<p><strong>What&#8217;s in it for sponsors?</strong></p>

<ul>
    <li>Invest in creating skills the industry needs</li>
    <li>Exclusive access to the interns for recruiting after the program finishes</li>
    <li>All sponsorship would be tax deductible via the 510(3)C</li>
</ul>


<p><strong>What&#8217;s in it for the interns?</strong></p>

<ul>
<li>Invaluable access and coaching to top industry mentors</li>
<li>6 months of pure software security training to develop skills in high demand</li>
<li>A public portfolio of work (code and blogs)</li>
<br />
<strong>What&#8217;s in it for the mentors?</strong></br>
Brad Feld talks a lot about giving first and being rewarded later in his new book <a href="http://www.amazon.com/exec/obidos/ASIN/1118441540/startuprev-20">Startup Communities</a>. Most successful people that I know value their time working on advisory boards and the personal relatinships from mentoring people as some of the most rewarding things they do. Any good mentor will have a busy schedule but paying it forward or paying it back will be a rewarding experience that will have an impact on the industry and on individuals lives. 
</br></br>
I know I would sign-up for something like this as a sponsor and as a mentor in a heart-beat. 15 years ago I would have applied in a heart-beat. A CSO for a major Internet company, an AppSec lead for a big financial services company and the CTO of a tools vendor have also said they would sign up to mentor I could pull this off. To top that three security services firms said they would sponsor a program like this and a core developer on the JQuery team has offered to participate if I could pull it off.
<strong>What about you?</strong>
</br></br>
[Thanks to <a href="http://www.twitter.com/mkonda">@mkonda</a> and <a href="http://www.twitter.com/mikedelibero">@mikedelibero</a> for their offline thoughts on this.]

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[The new blog, OWASP &amp other notes]]></title>
    <link href="http://curphey.github.com/blog/2012/10/17/new-blog-owasp-and-other-notes/"/>
    <updated>2012-10-17T21:20:00-07:00</updated>
    <id>http://curphey.github.com/blog/2012/10/17/new-blog-owasp-and-other-notes</id>
    <content type="html"><![CDATA[<p>I love Twitter but sometimes 140 characters just isn&#8217;t enough. Let&#8217;s be honest 140 characters is rarely enough for anything except your Lizard brain but the frictionless way of both sharing and reading snippets of information is so convenient that it is usually good enough for me. I do have a mental bank of notes that require co-herent sentences and so to light up the electrons of my new blog here goes:<!--more--></p>

<p><strong>I am a born again blogger :</strong> Yep siree, that&#8217;s right, I have found religion and the deep value in both blogging and reading blogs again. I used to post regularly at SecurityBuddha.com and then for some reason less frequently when I moved the blog to www.curphey.com but posts have hydrated over the last few years. Until the end of this year I am all consumed with writing my Practical Software Security book but I am just loving the writing process and have every intention of returning to posting frequently.</p>

<p>You may also notice if you are here for the first time or you arrived here from a recent Twitter link that this is a shiny new blog created today with no archived content. You won&#8217;t notice (at least not automagically) if you were previously subscribed to the RSS feed. I am very sorry that I have broken linkage but it was infact a concious decision. I decided that it was time for a brand new start. When I started importing old content and looked at the posts (some of which I had carried around for nearly a decade) I often cringed. I take full responsibility for previous posts and dont regret any I have changed a lot. I am thankful to those previous readers and of course hope they will continue but hope to find a new generation of readers and friends.</p>

<p>Yes, I will be prettifying it at some point!</p>

<p>For anyone interested this blog is powered by <a href="http://www.octopress.org">Octopress</a> and hosted using <a href="http://pages.github.com/">github Pages.</a> I am posting this using Sublime Text 2 and Terminal (rake generate and rake deploy). It&#8217;s a simple setup but simply awesome!</p>

<p><strong>OWASP :</strong> I have been very critical of OWASP for the last few years. If you didn&#8217;t know <a href="https://www.owasp.org/index.php/History_of_OWASP">I started it</a> back in 2002</a>. My consistent criticism has been generally around the focus and quality of projects, issues that might be attributed to OWASP&#8217;s own success. The nature of the project (it&#8217;s really more of a community than a project of course) is that it is totally open to absolutely anyone to participate. That attracts people from all backgrounds; those with deep skill and experience and some of those frankly without. It&#8217;s also a fact that most humans like to start or create things but far fewer like to improve or maintain things. This (in my opinon) has resulted in OWASP becoming an umbrella for thousands of peoples ideas. Some become amazingly valuable projects and are actively maintained (the ZAP Proxy is a great example) but many are not. As a result it is left to users to filter the signal from the noise. I think and I hear from many people that there is way too much noise that simply drowns out the quaity signals.</p>

<p>When I started OWASP I hoped it would become a community for security people and software developers to work together solving common software security problems. What is has evolved into in my opinion is a community of security folks mainly involved in testing and mainly involved in operational security. I lobbied behind the scenes, I poked and I prodded in a variety of places trying to make OWASP a place that I considered attractive for developers but was unable to effect the change I wanted to see. Selecting SourceForge as a project hosting site in 2010 is hardly an act that inspires modern developers to engage. You don&#8217;t get hired from your SourceForge activity you know! Starting a project with a goal of making commercial development frameworks more secure without being able to articulate the gaps in current frameworks and not having a single person on the project team that had actually shipped a commerical framework just made no sense to me. I have never questioned the intentions, there are all good people, just the decisions. It is also important to say that these are just two examples of many and I appreciate that it is very easy to throw stones. When combined with people constantly mailing me tales of beuracracy and politics, I got frustrated, dissapointed and became disillusioned. OWASP simply stopped being fun for me. I gave up trying to make it what I wanted it to be and I moved on.</p>

<p>I am very proud to have been a part of launching a successful global community and thankful for the opportunities that have come my way as a result of it. I check in on the site from time to time, love exchanging mails and drinking beer with people I have met along the way and sometimes get dragged into offline discusions wth passionate people who also want to change the status quo, but for the most part OWASP isn&#8217;t an important source of information for me anymore. To be clear I am not saying that it isn&#8217;t doing important or relevant work but I am saying that it is doing things that just things that aren&#8217;t important to me. The other day I wanted to ask for opinions on the security of a Grails Plugin and the week before about entropy for creating an API key. <span class='pullquote-right' data-pullquote='key exchange algorithms (such as Diffie-Hellman for SSL)&#8230;.allow use to safely exchange encryption keys with an unknown party'>I wanted opinions about architecture, cryptographic algorithms and engineering patterns. The <a href="https://www.owasp.org/index.php/Guide_to_Cryptography#Key_Exchange_Algorithms"></a>OWASP Guide to Cryptography</a> says that key exchange algorithms (such as Diffie-Hellman for SSL)&#8230;.allow use to safely exchange encryption keys with an unknown party. An unknown party, I sincerley hope not! </span>The noise and low quality combined with a lack of personal time to filter out the noise from the signal means that I rarely reference any of the content any more.</p>

<p>So with that said you might think I would be smirking when I see people Tweeting that they are abstaining from the OWASP Elections because they want fundamental change but actually nothing could be further from the truth. I am of course a little saddened but I have come to reason with myself that the state of OWASP is just fine. I don&#8217;t vote as I am not a member but as a community of pre-dominantly IT security folks that are predominantly interested in security testing and in raising awareness of the state of insecure web applications to the IT industry, OWASP is doing a fantastic job. <span class='pullquote-right' data-pullquote='A &#8216;Jack of all trades&#8217; is a master of none.&#8221;'>I have also come to reason with myself that if you changed the way the project operates then the groundswell of people involved would just go elsewhere and do the same thing somewhere else. We have learnt that lesson from bit torents. I used to think that developers and security people would mingle, cross polinate and be one big happy family but now think that they are fundamentaly driven by such different motivations and operate with such different cultures that a single project catering to both is simply naive. A &#8216;Jack of all trades&#8217; is a master of none.&#8221; </span>. Trust me, some days I daydream of becoming Chair again, conducting a Larry Page style spring clean of the cruft, banishing the res-tape and petty politics I hear about and actively attracting developers, But I have also come to reason that if you did that you would alientate the very thing that has made OWASP what it is today, the OWASP community.</p>

<p>I think there is room for a different type of software security community and I am going to create it. It will be called Seconauts. I don&#8217;t think anyone should see it as competitive and I will work hard to make it complimentary. It will be primarily for developers, initially invite only and focus on a small number (curated) high quality projects. Initially we are going to put Arachni Scanner online as a free managed services that will be 100% privacy aware (i.e. we wil lnever know who you are scanning or what the findings are) as well as a git based security knowledge sharing system (think GitHub for software security). The book will also be published open source online for free at Seconauts in the new year. Over the last year several of us have been making slow but steady progress but it&#8217;s time to step on the gas. I have a lawyer working on the 501(C)3 status and plan to start calling around to raise sponsorship money in the coming weeks. 100% of that money will go to pay developers to build 100% open source code. 0% admin overhead. The site really should be pushed live in beta in a few weeks (right Mike!).</p>

<p>So much like with the US elections, if you can vote in the OWASP elections then you should. If none of the candidates represent a vision that you want then you should either throw your hat in the ring or go off and create what you want elesewhere (like I am doing) but in practical terms abstaining is a vote for no change.</p>

<p>For those who may say &#8220;you have changed your tune haven&#8217;t you?&#8221;, well sure. Maybe I have mellowed, maybe I am aging well or maybe I just see things a little differently these days but one thing is for sure, I absolutley see the need for a different type of software security and I am going to launch it. There are questions I need answered, topics I want to see discussed and open source software I want to see built!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Notes from Richard Branson - Screw it Just Do It !]]></title>
    <link href="http://curphey.github.com/blog/2012/09/10/notes-from-richard-branson-screw-it-just-do-it/"/>
    <updated>2012-09-10T00:00:00-07:00</updated>
    <id>http://curphey.github.com/blog/2012/09/10/notes-from-richard-branson-screw-it-just-do-it</id>
    <content type="html"><![CDATA[<p>I have always admired Richard Branson. The way he lives his life, the values he brings to business, the adventures he goes on, the wrongs he rights and the way he does things differently simply inspires me. Like most people I am prone to stagnate, feel comfortable, get in a rut and need a jolt to realize my potential. <br /></p>

<p>Screw it Just Do it! is a short read and highly recommended to anyone needing a gentle reminder that you have one life and that there is no dress rehearsal.  <!--more-->These are the bullet points: <br /> <br /></p>

<p><strong>Just Do it!</strong></p>

<ul>
    <li>It Can Be Done</li>
    <li>Have Goals</li>
    <li>Live Life to the Full</li>
    <li>Never Give Up</li>
    <li>Prepare Well</li>
    <li>Have Faith in Yourself</li>
    <li>Help Each Other</li>
</ul>


<p><strong>Have Fun</strong></p>

<ul>
    <li>Fun, Work Hard and Money Will Come</li>
    <li>Don’t Waste Time – Grab Your Chances</li>
    <li>Have a Positive Outlook on Life</li>
    <li>When it’s Not Fun, Move On</li>
</ul>


<p><strong>Be Bold</strong></p>

<ul>
    <li>Calculate the Risks and Take Them</li>
    <li>Believe in Yourself</li>
    <li>Chase Your Dreams and Goals</li>
    <li>Have No Regrets</li>
    <li>Be Bold</li>
    <li>Keep Your Word</li>
</ul>


<p><strong>Challenge Yourself</strong></p>

<ul>
    <li>Aim High</li>
    <li>Try New Things</li>
    <li>Always Try Challenge Yourself</li>
</ul>


<p><strong>Stand on Your Own Feet</strong></p>

<ul>
    <li>Rely on Yourself</li>
    <li>Chase Your Dreams but Live in the Real World</li>
    <li>Work Together</li>
</ul>


<p><strong>Live the Moment</strong></p>

<ul>
    <li>Love Life and Live It To The Full</li>
    <li>Enjoy the Moment</li>
    <li>Reflect on Your Life</li>
    <li>Make Every Second Count</li>
    <li>Don’t Have Regrets</li>
</ul>


<p><strong>Value Family and Friends</strong></p>

<ul>
    <li>Put Family and the Team First</li>
    <li>Be Loyal</li>
    <li>Face Problems Head On</li>
    <li>Money is For Making Things Happen</li>
    <li>Pick the Right People and Reward Talent</li>
</ul>


<p><strong>Have Respect</strong></p>

<ul>
    <li>Be Polite and Respectful</li>
    <li>Do the Right Thing</li>
    <li>Keep Your Good Name</li>
    <li>Be Fair in All Your Dealings</li>
</ul>


<p><strong>Do Some Good</strong></p>

<ul>
    <li>Change the World</li>
    <li>Even If In a Small Way</li>
    <li>Make a Difference and Help Others</li>
    <li>Do No Harm</li>
    <li>Always Think What You Can Do To Help</li>
</ul>


<p>The book is available on Amazon <a href="http://www.amazon.com/Screw-Lets-Quick-Read-ebook/dp/B005F3GK92/ref=sr_1_2?ie=UTF8&amp;qid=1347297685&amp;sr=8-2&amp;keywords=screw+it+just+do+it">here</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Beautiful Security]]></title>
    <link href="http://curphey.github.com/blog/2010/04/30/beautiful-security/"/>
    <updated>2010-04-30T00:00:00-07:00</updated>
    <id>http://curphey.github.com/blog/2010/04/30/beautiful-security</id>
    <content type="html"><![CDATA[<p>A few years ago I contributed a stand-alone chapter to Beautiful Security, published by O&#8217;Reilly and avaiable for purchase on Amazon <a href="http://www.amazon.com/Beautiful-Security-Leading-Experts-Explain/dp/0596527489">here.</a></p>


<p>You can download a copy of my chapter called Tomorrow’s Security Cogs and Levers for free as a PDF <a href="http://mcurphey.files.wordpress.com/2010/04/beautifulsecuritycogsandleversmarkcurphey.pdf">here.</a></p>


<p><a href="http://www.amazon.com/Beautiful-Security-Leading-Experts-Explain/dp/0596527489" target="_blank"><img style="border-bottom:0;border-left:0;display:inline;border-top:0;border-right:0;" title="image" border="0" alt="image" src="http://mcurphey.files.wordpress.com/2010/04/image2.png" width="184" height="240" /></a></p>
]]></content>
  </entry>
  
</feed>
